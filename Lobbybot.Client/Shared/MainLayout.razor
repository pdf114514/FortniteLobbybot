@inherits LayoutComponentBase
@using System.Reflection

<style>
    :root {
        --HeaderHeight: 68px;

        --SideNavWidth: 64px;
    }

    ::-webkit-scrollbar {
        width: 8px;
    }

    main {
        height: calc(100vh - var(--HeaderHeight));
        align-self: flex-end;
        overflow-y: auto;
        flex-grow: 1;
        flex-shrink: 1;
        min-width: 772px;
        background-color: #111;
        color: #fff;
    }

    ul, li {
        list-style: none;
    }

    ul {
        padding-left: 0;
        margin-top: 0;
        margin-bottom: 0;
    }

    path {
        fill: #fff;
    }

    a {
        text-decoration: none;
    }

    .Header {
        align-items: center;
        box-sizing: border-box;
        display: flex;
        height: var(--HeaderHeight);
        justify-content: flex-start;
        left: 0;
        position: fixed;
        top: 0;
        transition: width .5s cubic-bezier(.33, 1, .68, 1);
        width: 100%;
        z-index: 32;
        font-size: 14px;
        line-height:1.5;
        color: #fff;
        background-color: #161b22;
        align-items: center;
        flex-wrap: nowrap

        padding: 0;
    }
    .Header::before {
        bottom: 0;
        content: "";
        display: block;
        height: 100%;
        left: 0;
        opacity: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: opacity .5s cubic-bezier(.33, 1, .68, 1);
        width: 100%;
    }
    .Header > ul {
        align-items: center;
        display: flex;
        flex-grow: 1;
        flex-shrink: 0;
        height: 100%;
        margin-right: 100%;

        margin: 0;
        padding: 0;
        z-index: 1;
    }

    .HeaderItem {
        display: flex;
        margin-right: 16px;
        align-self: stretch;
        align-items: center;
        flex-wrap: nowrap;
    }

    .HeaderItemFull {
        flex: auto;
    }

    .HeaderLink {
        font-weight: 600;
        color: #f0f6fc;
        white-space: nowrap;
        text-decoration: none;
    }
    .HeaderLink:hover, .HeaderLink:focus {
        color: rgba(255,255,255,0.7);
        text-decoration: none;
        outline: solid 1px transparent;
        outline-offset: -2px;
    }

    .MenuButtonWrapper {
        justify-content: center;
        margin: 4px 2px;
        width: 60px;

        list-style: none;
    }
    .MenuButton {
        cursor: pointer;
        height: 60px;
        position: relative;
        transition: background-color .1s linear;
        width: 60px;
        border: 0 transparent;
        border-radius: 0;

        background-color: #161b22;
    }

    .SideNavWrapper {
        background-color: #161b22;
        display: flex;
        flex-direction: column;
        height: 100vh;
        line-height: 1;
        padding-top: var(--HeaderHeight);
        position: fixed;
        transition: width .25s cubic-bezier(.33, 1, .68, 1);
        width: 188px;
    }
    .SideNavWrapper-Collapsed {
        width: var(--SideNavWidth);
    }

    .SideNav {
        flex-grow: 0;
        flex-shrink: 0;
        opacity: 1;
        position: relative;
        transition: opacity .2s, visibility .2s;
        visibility: visible;
        width: var(--SideNavWidth);

        z-index: 5;
    }
    .SideNav-Collapsed {
        width: var(--SideNavWidth);
    }

    .SideNavMain {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        flex-shrink: 0;
        min-height: 0;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .SideNavItem {
        position: relative;
    }

    .SideNavItemInner {
        display: grid;
        height: 56px;
        transition: color .25s cubic-bezier(.33, 1, .68, 1), height .25s cubic-bezier(.33, 1, .68, 1);
    }

    .SideNavItemIconWrapper {
        align-self: center;
        display: grid;
        grid-column: 1;
        grid-row: 1;
        height: 100%;
        justify-self: flex-start;
        text-align: center;
        width: 64px;
    }

    .SideNavItemIcon {
        align-self: center;
        display: block;
        grid-column: 1;
        grid-row: 1;
        height: 24px;
        justify-self: center;
        width: 24px;
    }

    .SideNavItemTextUnderIcon {
        align-self: flex-end;
        font-size: 10px;
        grid-column: 1;
        grid-row: 1;
        justify-self: center;
        line-height: 1.15;
        opacity: 0;
        transition: opacity .25s cubic-bezier(.33, 1, .68, 1), visibility .25s cubic-bezier(.33, 1, .68, 1);
        visibility: visible;
        color: #fff;
    }
    .SideNav-Collapsed .SideNavItemTextUnderIcon {
        opacity: 1;
        visibility: visible;
    }

    .SideNavItemText {
        align-self: center;
        font-size: 14px;
        grid-column: 1;
        grid-row: 1;
        justify-self: stretch;
        line-height: 1.5;
        opacity: 1;
        padding: 0 16px 0 60px;
        transition: opacity .25s cubic-bezier(.33, 1, .68, 1), visibility .25s cubic-bezier(.33, 1, .68, 1);
        visibility: visible;
        color: #fff;
    }
    .SideNav-Collapsed .SideNavItemText {
        opacity: 0;
        visibility: hidden;
    }

    .SideNavItemCollapsibleWrapper {
        opacity: 1;
        transition: width .25s cubic-bezier(.33, 1, .68, 1), opacity .25s cubic-bezier(.33, 1, .68, 1);
        width: 188px;
    }
    .SideNavItemCollapsibleWrapper-Collapsed {
        overflow: hidden;
        width: var(--SideNavWidth);
    }

    .SideNavItemCollapsibleWrapperInner {
        width: 188px;
    }

    .SideNavFooter {
        flex-grow: 0;
        flex-shrink: 0;
        padding: 8px 0;
    }

    .Button {
        color: #c9d1d9;
        background-color: #21262d;
        border-color: rgba(240,246,252,0.1) !important;
        box-shadow: 0 0 transparent, 0 0 transparent;
        transition: 80ms cubic-bezier(0.33, 1, 0.68, 1);
        transition-property: color, background-color, box-shadow, border-color;
        position: relative;
        display: inline-block;
        padding: 5px 16px;
        font-size: 14px;
        font-weight: 500;
        line-height: 20px;
        white-space: nowrap;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        user-select: none;
        border: 1px solid;
        border-radius: 6px;
        appearance: none;
        text-transform: none;
    }
    .Button:hover {
        background-color: #30363d;
        border-color: #8b949e;
        transition-duration: .1s;
        text-decoration: none;
    }

    @@media screen and (max-width: 480px) {
        :root {
            --SideNavWidth: 0px;
        }

        .SideNavItemTextUnderIcon {
            visibility: hidden;
        }
        .SideNav-Collapsed .SideNavItemTextUnderIcon {
            opacity: 0;
            visibility: hidden;
        }

        .SideNav-Collapsed {
            opacity: 0;
        }
    }
</style>

<div class="page" style="display: flex; height: 100vh;">
    <div>
        <header>
            <nav class="Header">
                <ul>
                    <li class="HeaderItem MenuButtonWrapper">
                        <button class="MenuButton" @onclick=@(() => SideNavCollapsed = !SideNavCollapsed)>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path style="fill: #fff;" d="M8.75 5.5h11.5a.75.75 0 0 1 0 1.5H8.75a.75.75 0 0 1 0-1.5Zm0 6h11.5a.75.75 0 0 1 0 1.5H8.75a.75.75 0 0 1 0-1.5Zm0 6h11.5a.75.75 0 0 1 0 1.5H8.75a.75.75 0 0 1 0-1.5ZM5 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM4 7a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm0 12a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>
                        </button>
                    </li>
                    <li class="HeaderItem">
                        <a href="/" class="HeaderLink" style="font-size: 16px; display: flex; align-items: center;">
                            <img src="/logo.png" width="48px"/>
                            <span>Lobbybot</span>
                        </a>
                    </li>
                    <li class="HeaderItem HeaderItemFull"></li>
                    <li class="HeaderItem">
                        <span title="@GetVersion(false)">Ver: @GetVersion()</span>
                    </li>
                </ul>
            </nav>
        </header>
    </div>

    <div class=@(SideNavCollapsed ? "SideNav SideNav-Collapsed" : "SideNav")>
        <nav class=@(SideNavCollapsed ? "SideNavWrapper SideNavWrapper-Collapsed" : "SideNavWrapper")>
            <div class="SideNavMain">
                <ul>
                    <li class="SideNavItem">
                        <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                            <div class="SideNavItemCollapsibleWrapperInner">
                                <a href="/">
                                    <div class="SideNavItemInner">
                                        <div class="SideNavItemIconWrapper">
                                            <span class="SideNavItemIcon">
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path style="fill: #fff;" d="M11.03 2.59a1.501 1.501 0 0 1 1.94 0l7.5 6.363a1.5 1.5 0 0 1 .53 1.144V19.5a1.5 1.5 0 0 1-1.5 1.5h-5.75a.75.75 0 0 1-.75-.75V14h-2v6.25a.75.75 0 0 1-.75.75H4.5A1.5 1.5 0 0 1 3 19.5v-9.403c0-.44.194-.859.53-1.144ZM12 3.734l-7.5 6.363V19.5h5v-6.25a.75.75 0 0 1 .75-.75h3.5a.75.75 0 0 1 .75.75v6.25h5v-9.403Z"></path></svg>
                                            </span>
                                            <span class="SideNavItemTextUnderIcon">@L["Home"]</span>
                                        </div>
                                        <span class="SideNavItemText">@L["Home"]</span>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </li>
                    <AuthorizeView>
                        <Authorized>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <a href="">
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" color="#fff" class="icon icon-tabler icon-tabler-adjustments-horizontal" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" style="fill: none;"></path><path d="M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" style="fill: none;"></path><path d="M4 6l8 0"></path><path d="M16 6l4 0"></path><path d="M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" style="fill: none;"></path><path d="M4 12l2 0"></path><path d="M10 12l10 0"></path><path d="M17 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" style="fill: none;"></path><path d="M4 18l11 0"></path><path d="M19 18l1 0"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Configuration"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Configuration"]</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </li>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <a href="">
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" color="#fff" class="icon icon-tabler icon-tabler-message-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" style="fill: none;"></path><path d="M8 9h8"></path><path d="M8 13h6"></path><path d="M9 18h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-3l-3 3l-3 -3z" style="fill: none;"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Commands"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Commands"]</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </li>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <a href="">
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" color="#fff" class="icon icon-tabler icon-tabler-notes" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" style="fill: none;"></path><path d="M5 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z" style="fill: none;"></path><path d="M9 7l6 0"></path><path d="M9 11l6 0"></path><path d="M9 15l4 0"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Boot"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Boot"]</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </li>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <a href="">
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" color="#fff" class="icon icon-tabler icon-tabler-robot" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" style="fill: none;"></path><path d="M6 4m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" style="fill: none;"></path><path d="M12 2v2"></path><path d="M9 12v9"></path><path d="M15 12v9"></path><path d="M5 16l4 -2"></path><path d="M15 14l4 2"></path><path d="M9 18h6"></path><path d="M10 8v.01"></path><path d="M14 8v.01"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Bots"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Bots"]</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                </ul>
            </div>
            <ul class="SideNavFooter">
                @if (PasswordEnabled) {
                    <AuthorizeView>
                        <NotAuthorized>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <a href="/auth/login" style="user-select: none; cursor: pointer;">
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M3 3.25c0-.966.784-1.75 1.75-1.75h5.5a.75.75 0 0 1 0 1.5h-5.5a.25.25 0 0 0-.25.25v17.5c0 .138.112.25.25.25h5.5a.75.75 0 0 1 0 1.5h-5.5A1.75 1.75 0 0 1 3 20.75Zm9.994 9.5 3.3 3.484a.75.75 0 0 1-1.088 1.032l-4.5-4.75a.75.75 0 0 1 0-1.032l4.5-4.75a.75.75 0 0 1 1.088 1.032l-3.3 3.484h8.256a.75.75 0 0 1 0 1.5Z"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Login"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Login"]</span>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </li>
                        </NotAuthorized>
                        <Authorized>
                            <li class="SideNavItem">
                                <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                                    <div class="SideNavItemCollapsibleWrapperInner">
                                        <span style="user-select: none; cursor: pointer;" @onclick=@(() => LogoutVisible = true)>
                                            <div class="SideNavItemInner">
                                                <div class="SideNavItemIconWrapper">
                                                    <span class="SideNavItemIcon">
                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M3 3.25c0-.966.784-1.75 1.75-1.75h5.5a.75.75 0 0 1 0 1.5h-5.5a.25.25 0 0 0-.25.25v17.5c0 .138.112.25.25.25h5.5a.75.75 0 0 1 0 1.5h-5.5A1.75 1.75 0 0 1 3 20.75Zm16.006 9.5H10.75a.75.75 0 0 1 0-1.5h8.256l-3.3-3.484a.75.75 0 0 1 1.088-1.032l4.5 4.75a.75.75 0 0 1 0 1.032l-4.5 4.75a.75.75 0 0 1-1.088-1.032Z"></path></svg>
                                                    </span>
                                                    <span class="SideNavItemTextUnderIcon">@L["Logout"]</span>
                                                </div>
                                                <span class="SideNavItemText">@L["Logout"]</span>
                                            </div>
                                        </span>
                                    </div>
                                </div>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                }
                <li class="SideNavItem">
                    <div class=@(SideNavCollapsed ? "SideNavItemCollapsibleWrapper SideNavItemCollapsibleWrapper-Collapsed" : "SideNavItemCollapsibleWrapper")>
                        <div class="SideNavItemCollapsibleWrapperInner">
                            <span style="user-select: none; cursor: pointer;" @onclick=@(() => SettingsVisible = true)>
                                <div class="SideNavItemInner">
                                    <div class="SideNavItemIconWrapper">
                                        <span class="SideNavItemIcon">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path style="fill: #fff;" d="M16 12a4 4 0 1 1-8 0 4 4 0 0 1 8 0Zm-1.5 0a2.5 2.5 0 1 0-5 0 2.5 2.5 0 0 0 5 0Z"></path><path style="fill: #fff;" d="M12 1c.266 0 .532.009.797.028.763.055 1.345.617 1.512 1.304l.352 1.45c.019.078.09.171.225.221.247.089.49.19.728.302.13.061.246.044.315.002l1.275-.776c.603-.368 1.411-.353 1.99.147.402.349.78.726 1.128 1.129.501.578.515 1.386.147 1.99l-.776 1.274c-.042.069-.058.185.002.315.112.238.213.481.303.728.048.135.142.205.22.225l1.45.352c.687.167 1.249.749 1.303 1.512.038.531.038 1.063 0 1.594-.054.763-.616 1.345-1.303 1.512l-1.45.352c-.078.019-.171.09-.221.225-.089.248-.19.491-.302.728-.061.13-.044.246-.002.315l.776 1.275c.368.603.353 1.411-.147 1.99-.349.402-.726.78-1.129 1.128-.578.501-1.386.515-1.99.147l-1.274-.776c-.069-.042-.185-.058-.314.002a8.606 8.606 0 0 1-.729.303c-.135.048-.205.142-.225.22l-.352 1.45c-.167.687-.749 1.249-1.512 1.303-.531.038-1.063.038-1.594 0-.763-.054-1.345-.616-1.512-1.303l-.352-1.45c-.019-.078-.09-.171-.225-.221a8.138 8.138 0 0 1-.728-.302c-.13-.061-.246-.044-.315-.002l-1.275.776c-.603.368-1.411.353-1.99-.147-.402-.349-.78-.726-1.128-1.129-.501-.578-.515-1.386-.147-1.99l.776-1.274c.042-.069.058-.185-.002-.314a8.606 8.606 0 0 1-.303-.729c-.048-.135-.142-.205-.22-.225l-1.45-.352c-.687-.167-1.249-.749-1.304-1.512a11.158 11.158 0 0 1 0-1.594c.055-.763.617-1.345 1.304-1.512l1.45-.352c.078-.019.171-.09.221-.225.089-.248.19-.491.302-.728.061-.13.044-.246.002-.315l-.776-1.275c-.368-.603-.353-1.411.147-1.99.349-.402.726-.78 1.129-1.128.578-.501 1.386-.515 1.99-.147l1.274.776c.069.042.185.058.315-.002.238-.112.481-.213.728-.303.135-.048.205-.142.225-.22l.352-1.45c.167-.687.749-1.249 1.512-1.304C11.466 1.01 11.732 1 12 1Zm-.69 1.525c-.055.004-.135.05-.161.161l-.353 1.45a1.832 1.832 0 0 1-1.172 1.277 7.147 7.147 0 0 0-.6.249 1.833 1.833 0 0 1-1.734-.074l-1.274-.776c-.098-.06-.186-.036-.228 0a9.774 9.774 0 0 0-.976.976c-.036.042-.06.131 0 .228l.776 1.274c.314.529.342 1.18.074 1.734a7.147 7.147 0 0 0-.249.6 1.831 1.831 0 0 1-1.278 1.173l-1.45.351c-.11.027-.156.107-.16.162a9.63 9.63 0 0 0 0 1.38c.004.055.05.135.161.161l1.45.353a1.832 1.832 0 0 1 1.277 1.172c.074.204.157.404.249.6.268.553.24 1.204-.074 1.733l-.776 1.275c-.06.098-.036.186 0 .228.301.348.628.675.976.976.042.036.131.06.228 0l1.274-.776a1.83 1.83 0 0 1 1.734-.075c.196.093.396.176.6.25a1.831 1.831 0 0 1 1.173 1.278l.351 1.45c.027.11.107.156.162.16a9.63 9.63 0 0 0 1.38 0c.055-.004.135-.05.161-.161l.353-1.45a1.834 1.834 0 0 1 1.172-1.278 6.82 6.82 0 0 0 .6-.248 1.831 1.831 0 0 1 1.733.074l1.275.776c.098.06.186.036.228 0 .348-.301.675-.628.976-.976.036-.042.06-.131 0-.228l-.776-1.275a1.834 1.834 0 0 1-.075-1.733c.093-.196.176-.396.25-.6a1.831 1.831 0 0 1 1.278-1.173l1.45-.351c.11-.027.156-.107.16-.162a9.63 9.63 0 0 0 0-1.38c-.004-.055-.05-.135-.161-.161l-1.45-.353c-.626-.152-1.08-.625-1.278-1.172a6.576 6.576 0 0 0-.248-.6 1.833 1.833 0 0 1 .074-1.734l.776-1.274c.06-.098.036-.186 0-.228a9.774 9.774 0 0 0-.976-.976c-.042-.036-.131-.06-.228 0l-1.275.776a1.831 1.831 0 0 1-1.733.074 6.88 6.88 0 0 0-.6-.249 1.835 1.835 0 0 1-1.173-1.278l-.351-1.45c-.027-.11-.107-.156-.162-.16a9.63 9.63 0 0 0-1.38 0Z"></path></svg>
                                        </span>
                                        <span class="SideNavItemTextUnderIcon">@L["Settings"]</span>
                                    </div>
                                    <span class="SideNavItemText">@L["Settings"]</span>
                                </div>
                            </span>
                        </div>
                    </div>
                </li>
            </ul>
        </nav>
    </div>

    <main>
        <article class="content px-2" style="display: flex; height: calc(100vh - var(--HeaderHeight)); width: calc(100vw - var(--SideNavWidth)); flex-direction: column; position: absolute; left: var(--SideNavWidth); top: var(--HeaderHeight);">
            @Body
        </article>
    </main>

    <Modal Title=@L["Logout"] Visible=LogoutVisible OnClose=@(() => LogoutVisible = false)>
        <p>@L["LogoutConfirm"]</p>
        <button class="btn" @onclick=@(async () => { await Auth.Logout(); LogoutVisible = false; })>@L["Logout"]</button>
    </Modal>

    <Modal Title=@L["Settings"] Visible=SettingsVisible OnClose=@(() => SettingsVisible = false)>
        <p>
            @L["Language"]:
            <select @bind="Language">
                @foreach (var language in SupportedLanguages) {
                    <option value="@language">@string.Concat(language.ToUpper().Select(x => char.ConvertFromUtf32(x + 0x1F1A5))) @language</option>
                }
            </select>
        </p>
        <button class="Button" type="button" @onclick=@(() => JS.InvokeVoid("location.reload"))>@L["Reload"]</button>
    </Modal>
</div>

@code {
    bool SideNavCollapsed = true;
    bool LogoutVisible = false;
    bool SettingsVisible = false;
    bool PasswordEnabled = false;

    string[] SupportedLanguages => Localization.SupportedLanguages;
    string Language { get => L.Language; set {
        JS.LSSetItem("language", value);
        L.SwitchLanguage(value);
        // StateHasChanged();
    } }

    protected override async Task OnInitializedAsync() {
        Console.WriteLine($"Version: {GetVersion(false)}");
        if (await Auth.IsAuthenticated()) {
            var config = await Api.GetConfig();
            PasswordEnabled = config.Web.PasswordEnabled;
        } else PasswordEnabled = true;
        await base.OnInitializedAsync();
    }

    string GetVersion(bool shortVersion = true) {
        var informationalVersion = Assembly.GetExecutingAssembly().GetCustomAttribute<System.Reflection.AssemblyInformationalVersionAttribute>().InformationalVersion;
        if (!shortVersion) return informationalVersion;
        var splitted = informationalVersion.Split('+');
        return $"{splitted[0]}+{splitted[1][..7]}";
    }
}