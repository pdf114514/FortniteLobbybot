@using Markdig
@using System.Reflection

@Rendered

@code {
    [Parameter]
    public string? Filename { get; set; }

    public MarkupString Rendered { get; private set; }

    protected override void OnInitialized() {
        var assembly = Assembly.GetExecutingAssembly();
        // foreach (var (key, value) in assembly.GetManifestResourceNames().Select(x => (x, x.Replace($"{assembly.GetName().Name}.", "")))) Console.WriteLine($"{key} => {value}");
        var resourceName = $"{assembly.GetName().Name}.{Filename!.Replace('/', '.')}";
        using var stream = assembly.GetManifestResourceStream(resourceName);
        if (stream is null) Rendered = (MarkupString)$"The resource {resourceName} does not exist.";
        else {
            using var reader = new StreamReader(stream);
            Rendered = (MarkupString)Markdown.ToHtml(reader.ReadToEnd());
        }
    }
}