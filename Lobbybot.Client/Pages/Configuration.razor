@page "/configuration"
@attribute [Authorize]

<style>
    .Config > div > div {
        border-bottom: 2px solid #555;
        padding: 4px 0;
    }

    .Config > div > div > span:first-child {
        display: inline-block;
        width: 200px;
    }

    .SaveConfigButton {
        position: absolute;
        right: 0;
        bottom: 0;
        margin-bottom: 20px;
        margin-right: 20px;
    }

    .NewBotGuide {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 100;
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>

<h2>@L["Configuration"]</h2>
@if (Config is null) {
    <p>@L["Loading"]</p>
} else {
    <button class="Button SaveConfigButton" @onclick="SaveConfig">@L["Save"]</button>
    <div class="NewBotGuide" style="display: @(ShowingNewBotGuide ? "inherit" : "none")">
        <code>(function () {let xhr = new XMLHttpRequest();xhr.open("GET","https://www.epicgames.com/id/api/redirect?clientId=3446cd72694c4a4485d81b77adbb2141&amp;responseType=code",!0);xhr.onload = () =&gt; {if (4 === xhr.readyState &amp;&amp; 200 === xhr.status) {var a = JSON.parse(xhr.responseText).redirectUrl.split("?code=")[1];location.href = "@(Host)authorize?code="+a;} else alert(`Error ${xhr.statusText}`);};xhr.onerror = () =&gt; {alert("XHR ERROR");};xhr.send();})();</code>
    </div>
    <div class="Config">
        <h4>@L["Bots"]</h4>
        <button class="Button" @onclick="() => ShowingNewBotGuide = true">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="1.2em" height="1.2em" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M12 5l0 14"></path>
                <path d="M5 12l14 0"></path>
            </svg>
            <span>@L["AddNewBot"]</span>
        </button>
        @foreach (var bot in Config.Bots.Values) {
            <h5>@L["Bot"] @(Config.Bots.Values.ToList().IndexOf(bot) + 1)</h5>
            <div>
                <div>
                    <span>@L["AutoStart"]</span>
                    <InputCheckbox @bind-Value="bot.AutoStart" />
                </div>
            </div>
        }
        <h4>@L["Web"]</h4>
        <div>
            <div>
                <span>@L["EnablePassword"]</span>
                <InputCheckbox @bind-Value="Config.Web.PasswordEnabled" /> <!-- Is this correct? -->
            </div>
            <div>
                <span>@L["Password"]</span>
                <InputText type="@InputWebPassword" disabled=@(!Config.Web.PasswordEnabled) @bind-Value="Config.Web.Password" />
                <span style="cursor: pointer;" @onclick="() => WebPasswordVisible = Config.Web.PasswordEnabled && !WebPasswordVisible">
                    @if (WebPasswordVisible) {
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
                            <path d="M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6"></path>
                        </svg>
                    } else {
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M21 9c-2.4 2.667 -5.4 4 -9 4c-3.6 0 -6.6 -1.333 -9 -4"></path>
                            <path d="M3 15l2.5 -3.8"></path>
                            <path d="M21 14.976l-2.492 -3.776"></path>
                            <path d="M9 17l.5 -4"></path>
                            <path d="M15 17l-.5 -4"></path>
                        </svg>
                    }
                </span>
            </div>
        </div>
    </div>
}

@code {
    LobbybotConfig? Config;
    bool WebPasswordVisible = false;
    string InputWebPassword => WebPasswordVisible ? "text" : "password";
    bool ShowingNewBotGuide = false;
    string Host = string.Empty;

    protected override async Task OnInitializedAsync() {
        Config = await Api.GetConfig();
        Host = Navigation.BaseUri;
    }

    async void SaveConfig() {
        var old = await Api.GetConfig();
        if (Config is null || old is null) {
            JS.Alert("Config is null!");
            return;
        }
        else await Api.SaveConfig(Config);
        if (!old.Web.PasswordEnabled && Config.Web.PasswordEnabled) {
            JS.Alert("You enabled the password. Please login.");
            JS.InvokeVoid("location.reload");
        }
    }
}